<Activity mc:Ignorable="sap sap2010" x:Class="addressBook_UC1" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="811.2,1664.8" sap2010:WorkflowViewState.IdRef="addressBook_UC1_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="28">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="addressBook_UC1" sap:VirtualizedContainerService.HintSize="743.2,3053.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="connection" />
      <Variable x:TypeArguments="x:Int32" Name="rowsAffected" />
      <Variable x:TypeArguments="sd:DataTable" Name="excelData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dataBaseTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="updateExcel" />
      <Variable x:TypeArguments="x:Boolean" Name="isDuplicate" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="701.6,262.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="C:\Users\Tirupathi Rao\Desktop\RPA\AddressBookSheet.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,152.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[excelData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:DatabaseConnect DatabaseConnection="[connection]" DisplayName="Connect" sap:VirtualizedContainerService.HintSize="701.6,60" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.SqlClient" ConnectionString="Data Source=(LocalDb)\Ktr;Initial Catalog=AddressBookSystem;Integrated Security=True" />
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[excelData]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="701.6,238.4" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[connection]" sap:VirtualizedContainerService.HintSize="333.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_2" Sql="insert into [dbo].[AddressBookTable](firstName,lastName,address,city,state,zip,phoneNumber,email,addressId) values(@firstName,@lastName,@address,@city,@state,@zip,@phoneNumber,@email,@addressId)">
            <ui:ExecuteNonQuery.Parameters>
              <InArgument x:TypeArguments="x:String" x:Key="firstName">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(&quot;firstName&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="lastName">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(&quot;lastName&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="address">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(&quot;city&quot;).ToString +&quot;, &quot;+ row(&quot;state&quot;).ToString + &quot;, &quot;+row(&quot;zip&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="city">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(&quot;city&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="state">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(&quot;state&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="zip">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(&quot;zip&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="phoneNumber">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(&quot;phoneNumber&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="email">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row(&quot;email&quot;).ToString" />
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="addressId">
                <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="convert.ToInt32(row(&quot;addressId&quot;))" />
              </InArgument>
            </ui:ExecuteNonQuery.Parameters>
          </ui:ExecuteNonQuery>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <Sequence DisplayName="Retrieve database data" sap:VirtualizedContainerService.HintSize="701.6,182.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dataBaseTable]" DisplayName="Execute Query" ExistingDbConnection="[connection]" sap:VirtualizedContainerService.HintSize="333.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="select * from [dbo].[AddressBookTable]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
      </ui:ExecuteQuery>
    </Sequence>
    <Sequence DisplayName="Update database checking duplicate" sap:VirtualizedContainerService.HintSize="701.6,1629.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="660,262.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="C:\Users\Tirupathi Rao\Desktop\RPA\AddressBookSheet - Update.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,152.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[updateExcel]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Sheet1">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
              </ui:ExcelReadRange>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
      </ui:ExcelApplicationScope>
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[updateExcel]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="660,1234.4" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row1" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="610.4,1085.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="568.8,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[isDuplicate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dataBaseTable]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="568.8,613.6" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row2" />
                    </ActivityAction.Argument>
                    <If Condition="[row1(&quot;addressId&quot;).ToString = row2(&quot;addressId&quot;).ToString]" sap:VirtualizedContainerService.HintSize="519.2,464.8" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,315.2" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Duplicate Entry : Found in database already&quot;+row1(&quot;addressId&quot;).ToString]" />
                          <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[isDuplicate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Break sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Break_1" />
                        </Sequence>
                      </If.Then>
                    </If>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
              <If Condition="[isDuplicate=False]" sap:VirtualizedContainerService.HintSize="568.8,239.2" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Then>
                  <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[connection]" sap:VirtualizedContainerService.HintSize="333.6,89.6" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_3" Sql="insert into [dbo].[AddressBookTable](firstName,lastName,address,city,state,zip,phoneNumber,email,addressId) values(@firstName,@lastName,@address,@city,@state,@zip,@phoneNumber,@email,@addressId)">
                    <ui:ExecuteNonQuery.Parameters>
                      <InArgument x:TypeArguments="x:String" x:Key="firstName">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row1(&quot;firstName&quot;).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="lastName">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row1(&quot;lastName&quot;).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="address">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row1(&quot;city&quot;).ToString +&quot;, &quot;+ row1(&quot;state&quot;).ToString + &quot;, &quot;+row1(&quot;zip&quot;).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="city">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row1(&quot;city&quot;).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="state">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row1(&quot;state&quot;).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="zip">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row1(&quot;zip&quot;).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="phoneNumber">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row1(&quot;phoneNumber&quot;).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="email">
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="row1(&quot;email&quot;).ToString" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="addressId">
                        <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="convert.ToInt32(row1(&quot;addressId&quot;))" />
                      </InArgument>
                    </ui:ExecuteNonQuery.Parameters>
                  </ui:ExecuteNonQuery>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dataBaseTable]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="701.6,388" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,239.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="password">
                <Variable.Default>
                  <Literal x:TypeArguments="x:String">Dontbluff@143</Literal>
                </Variable.Default>
              </Variable>
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="Hope you find this email safe" DisplayName="Send SMTP Mail Message" Email="tirupathi9436@gmail.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="False" Password="[password]" Port="587" SecureConnection="Auto" Server="smtp.gmail.com" Subject="[&quot;Hi &quot;+row(&quot;firstName&quot;).ToString+&quot; &quot;+row(&quot;lastName&quot;).ToString]" To="[row(&quot;email&quot;).ToString]">
              <ui:SendMail.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </ui:SendMail.Files>
            </ui:SendMail>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
  </Sequence>
</Activity>